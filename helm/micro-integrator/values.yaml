# Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
wso2:
  # WSO2 subscription parameters. If you do not have an active subscription, do not provide values for the parameters.
  # If you do not possess an active WSO2 subscription already, you can sign up for a WSO2 Free Trial Subscription at (https://wso2.com/free-trial-subscription).
  subscription:
    username: ""
    password: ""
  deployment:
    wso2microIntegrator:
      # If a custom image must be used, uncomment 'dockerRegistry' and provide its value.
#      dockerRegistry: ""
      imageName: "wso2mi"
      imageTag: "1.2.0"
      # Number of deployment replicas
      replicas: 1
      strategy:
        rollingUpdate:
          # The maximum number of pods that can be scheduled above the desired number of pods.
          maxSurge: 1
          # The maximum number of pods that can be unavailable during the update.
          maxUnavailable: 0
      # Indicates whether the container is running.
      livenessProbe:
        # Number of seconds after the container has started before liveness probes are initiated.
        initialDelaySeconds: 35
        # How often (in seconds) to perform the probe.
        periodSeconds: 10
      # Indicates whether the container is ready to service requests.
      readinessProbe:
        # Number of seconds after the container has started before readiness probes are initiated.
        initialDelaySeconds: 35
        # How often (in seconds) to perform the probe.
        periodSeconds: 10
      # These are the minimum resource recommendations for running WSO2 Micro Integrator
      resources:
        requests:
          # The minimum amount of memory that should be allocated for a Pod
          memory: "512Mi"
          # The minimum amount of CPU that should be allocated for a Pod
          cpu: "500m"
        limits:
          # The maximum amount of memory that should be allocated for a Pod
          memory: "1Gi"
          # The maximum amount of CPU that should be allocated for a Pod
          cpu: "1000m"
      # Environment variables for the Micro integrator deployment.
      envs:
      #  ENV_NAME: ENV_VALUE
      # Configure synapse testing.
      synapseTest:
        enabled: false
  # Configure Ingress for the Micro integrator deployment.
  ingress:
    # Configure services ingress
    services:
      # Hostname for the Micro Integrator services endpoint.
      hostname: "mi.wso2.com"
      # Annotations for the Micro Integrator services Ingress.
      annotations:
        kubernetes.io/ingress.class: "nginx"
        nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    # Configure management ingress
    mgt:
      # Hostname for the Micro Integrator management endpoint.
      hostname: "mi.mgt.wso2.com"
      # Annotations for the Micro Integrator management Ingress.
      annotations:
        kubernetes.io/ingress.class: "nginx"
        nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
  # Configurations for the logstash container image and elasticsearch authorization credentials
  # Centralized logging is disabled by default. If it is required to enable centralized logging, please follow the instructions
  # provided in the documentation (https://github.com/wso2/kubernetes-mi/blob/master/helm/micro-integrator/README.md#enabling-centralized-logging)
  centralizedLogging:
    enabled: false
    logstash:
      imageTag: 7.2.0
      elasticsearch:
        host: wso2-elasticsearch-master
        username: "elastic"
        password: "changeme"
